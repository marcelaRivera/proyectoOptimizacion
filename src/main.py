from lecture import readFile, writeOutSA, writeOutGoloso, writeAnality, writeOutCost
from initialSolution import getHourInit, constructiveO, getEmployersCalificatesInJobs, constructiveHeuristic
from generateNeighborhood import generatingNeighborhood, test
from simuleted import simulatedAnneling, funcionObjetivoWithCost,jobsForEachWoker 
from goloso import goloso
import random
import numpy as np

def main():

	opcion = 0
	jobs = None # Lista que almacenara a las tareas
	jobsCalificate = None # Trabajos que puede hacer cada trabajador
	O = None #vector con las tareas superpuestas
	P = None #empleados calificados para hacer la tarea i
	R = [] #trabajos asignados al trabajador w
	S = None #horas de inicio de cada trabajo 
	entrada = None
	listOfCost = None
	listWorkerCosto = None
	iteraciones = 11

	while opcion != 4:

		print("1. Ingresar archivo")
		print("2. Realizar análisis con método Goloso")
		print("3. Realizar análisis con metaheuristica SA")
		print("4. Salir")

		opcion = input("Ingrese la opción: ")
		print(opcion)
		if opcion == "1":
			
			#DB 1
			name = "data_10_51_111_66.dat"
			#DB 2
			#name = "data_30_25_219_66.dat" 
			#DB 3
			#name = "data_39_45_351_66.dat" 
			#DB 4
			#name = "data_137_245_2105_33.dat" 

			jobs, jobsCalificate =  readFile(name)
			S = getHourInit(jobs)
			O = constructiveO(jobs)
			P = getEmployersCalificatesInJobs(jobsCalificate, len(jobs))
			entrada = constructiveHeuristic(S, O, P, R, len(jobsCalificate))
			# Ya no va
			#listWorkerCosto = [random.random() for i in range(len(jobsCalificate))]
			
			#DB 1 
			#listWorkerCosto = [0.7421514138952409, 0.4851470619094209, 0.7491854409314038, 0.6809353776830357, 0.4385701552909347, 0.029099235778728194, 0.9908807781528942, 0.5415317551271103, 0.2846818347165925, 0.20268204910494048, 0.008915202996132243, 0.21827562010196144, 0.5441275437747073, 0.36159173551049406, 0.055801107627879265, 0.3209863432945067, 0.31221464865172077, 0.2219691044645541, 0.6610638178303546, 0.11093993084216136, 0.10024092337440837, 0.6430250428111212, 0.04049804641006438, 0.4064011001459662, 0.3671143954033562, 0.7858259425735097, 0.5115921952144489, 0.44700518724908445, 0.23048792639116433, 0.50327275233503, 0.1856793059204742, 0.6349561535226376, 0.8448730646159218, 0.5707120377922104, 0.26316727066455603, 0.6672811528327514, 0.1807109739352183, 0.4379657622352141, 0.8916553483433888, 0.47475490478789273, 0.021172745656105274, 0.2829660708768874, 0.10475684873180757, 0.0964797479817402, 0.2139401668977705, 0.17828215329102648, 0.15453943927272062, 0.3673327260068552, 0.8994944064326231, 0.5304374928137914, 0.5149571462882213, 0.8938744398999096, 0.21071458988221858, 0.7393973621387802, 0.5411390650198536, 0.06993474320268933, 0.8702648039202817, 0.2393441672210509, 0.9559024429462308, 0.21643382718686033, 0.2359284625675825, 0.9558134743204142, 0.5662424993935171, 0.11056151018317106, 0.746294628756421, 0.7169396821408873, 0.062274917370610416, 0.426280744100749, 0.2539935728946393, 0.11617080361698806, 0.38530302254272286, 0.7486720799941131, 0.09472005818627371, 0.849881515184102, 0.45159394882200854, 0.9154340101248918, 0.8641868153334892, 0.7385788074443024, 0.21247953157869737, 0.7855089158451047, 0.7038354618617445, 0.4295409109569215, 0.04486553366659274, 0.9232602784377647, 0.3303201052704603, 0.33422289152690965, 0.4745812844582792, 0.2670939154641119, 0.03193597903915002, 0.8608194210863029, 0.5023040022963519, 0.12367069310628986, 0.3898046851693805, 0.0008481760699665664, 0.5756382251698866, 0.742777472920201, 0.8531531884827621, 0.878315230156678, 0.9190068099574042]
			#DB 2
			#listWorkerCosto = [0.3073364501305188, 0.8474710376845578, 0.8416419370694189, 0.912064748854245, 0.04161452067031357, 0.15646308754575167, 0.8235038799484227, 0.014765099856348551, 0.041190242996917426, 0.006809684912925218, 0.3933578923744099, 0.15657355128528272, 0.4246679618093072, 0.5149278512562762, 0.6575976254719709, 0.7792769860166497, 0.9305904745200047, 0.32002495008680665, 0.6576116981114464, 0.8745661256366614, 0.27069301503547594, 0.25961292545982584, 0.06614102013509282, 0.5050883898524482, 0.8196892965152853]
			#DB 3
			#listWorkerCosto = [0.6517117832136488, 0.5647906918737314, 0.13993421801397543, 0.1782136267304728, 0.9339673582095258, 0.16512047391412032, 0.3883876203868659, 0.6880254212752165, 0.7913402549933222, 0.5531901843637286, 0.6500766869071244, 0.7197255571988806, 0.7454795847328695, 0.45223203066767204, 0.5849551537122397, 0.22388497233739935, 0.9758761143556578, 0.02409819925111989, 0.863639728236142, 0.8202863285112729, 0.35620708359299325, 0.8613358918368275, 0.14219071367266511, 0.3627480943348871, 0.11996270297200984, 0.1440111026439067, 0.3824535022589163, 0.1236130312273026, 0.9493072173443567, 0.36481276657485173, 0.6880006360207056, 0.8851061239212059, 0.25457210936400854, 0.7421365661223418, 0.09667060277914774, 0.636545103903353, 0.5146561984214265, 0.04115033088767317, 0.5274598507475052, 0.6504752511776647, 0.7494424900334935, 0.907487759302799, 0.12180833073359498, 0.7046159038124029, 0.18174650218989297]
			#DB 4
			#listWorkerCosto = [0.7111985797121056, 0.9111432671017826, 0.5748377541667207, 0.5631323019933512, 0.42432560685862253, 0.5206218421386958, 0.35114973052939, 0.9648999387613691, 0.265056065622024, 0.4022838209951186, 0.5392956213807351, 0.1640931727807161, 0.9141337780440429, 0.9049241524516672, 0.900042668498647, 0.5696911937978966, 0.3962765757674519, 0.7601353527382197, 0.06309920035386563, 0.08593537028634401, 0.2007179631717252, 0.18403244336134494, 0.7630485773591471, 0.17722138820222322, 0.7229350166721117, 0.569683804134533, 0.1432148760566564, 0.2536969654073118, 0.18019504879814374, 0.07398285587245845, 0.4200041054569912, 0.9906126154760112, 0.27576701184264385, 0.2915681688426722, 0.7927743776809245, 0.9512356124300444, 0.4532170533927594, 0.27108808550860863, 0.6189011797989962, 0.4991002266723725, 0.8318989354196619, 0.06079302241579376, 0.5869353584285417, 0.6114202385516798, 0.08288534859336061, 0.6508451836124782, 0.5942897625213565, 0.637580866216915, 0.6645358968705289, 0.41383695660954434, 0.042335236729262204, 0.4776496069592543, 0.8496484825438878, 0.9266126297477415, 0.28068207573570725, 0.2781585229913007, 0.9986279577889361, 0.6935405549730618, 0.4468831930926991, 0.9792784866597047, 0.6910147738031817, 0.686053620135388, 0.9660371247087098, 0.9328495545716837, 0.7896479457272374, 0.5748371700040037, 0.9176887869376992, 0.05779252553750602, 0.25030541863572064, 0.31256367070581625, 0.9591209927724413, 0.10286877924881088, 0.07921080498707178, 0.23184974311764683, 0.193039011284021, 0.08471926277192787, 0.4513679462482747, 0.20444025654388176, 0.7069501425015758, 0.5175804797258019, 0.3943166085151022, 0.8312704171831871, 0.9287041507034951, 0.667179270224402, 0.680327765157907, 0.12516237951670683, 0.47729798996809225, 0.7155297766151241, 0.341656076817345, 0.8430996757575123, 0.8156211909897765, 0.36328994503747036, 0.048769818315032576, 0.0464870234061282, 0.12380130659912947, 0.8582687612363809, 0.37243573758944926, 0.7445108574675171, 0.02962331930966111, 0.15755914745123467, 0.28996742365886796, 0.8458853183347609, 0.10453291482833993, 0.21525569157105862, 0.36073118570404283, 0.974884381225472, 0.48477148041254203, 0.9117226574182059, 0.13808161283475706, 0.4360205857270718, 0.13017326310437982, 0.07318752595704336, 0.8576625793050308, 0.2986552507338833, 0.10690361489394773, 0.8624917695435524, 0.2411860204953301, 0.6972702463971973, 0.4975064663824359, 0.3582871046208339, 0.819630900549969, 0.08624740390245389, 0.35447020359088355, 0.3636199769680917, 0.13693932405875786, 0.7733612139636665, 0.7222694639879136, 0.634339111812069, 0.19691484605034304, 0.9755704878705969, 0.1845027529196429, 0.07517568284238219, 0.7329222405294912, 0.6755728064794027, 0.6352332386533072, 0.43955773015703237, 0.7945301508912962, 0.3887354995844682, 0.2221101826233729, 0.9575074189934986, 0.376083615506553, 0.6412962940122218, 0.1483384138668371, 0.1995905966505339, 0.40351436976921917, 0.4972136569270521, 0.06605405109643692, 0.24033789051928578, 0.17525699499265146, 0.4752639995092829, 0.2466972597713455, 0.7881436007975261, 0.6956774278059568, 0.4218751944628958, 0.44510114286668945, 0.8990793885646843, 0.346378234001384, 0.3190120885703811, 0.057722804171270514, 0.23514023311141818, 0.8790531188943409, 0.9989883255743028, 0.2166832410469124, 0.3616024307032675, 0.2728785916233576, 0.6021185140746432, 0.3211880215493015, 0.3841524107205514, 0.3823655916793697, 0.6996572922144545, 0.5333181914365346, 0.639963497040805, 0.46689480074334255, 0.9236072466514069, 0.8540998833124318, 0.31319078422584945, 0.5959748581425075, 0.683048477505197, 0.45739833520712014, 0.2966325220566729, 0.3041325879024097, 0.545992826232383, 0.9426351056644734, 0.8767123370817849, 0.1612651758349969, 0.7740854415818023, 0.5009392794694617, 0.8324670483820477, 0.5595886138479085, 0.8043976532003149, 0.48925180500470755, 0.4541976221226689, 0.4439192798741626, 0.5043022623234433, 0.5758454792299245, 0.012379485201713725, 0.04970026463375288, 0.2703262070117488, 0.35349003645412647, 0.7946596806731965, 0.17358150662541927, 0.4708226086124827, 0.13706021277333713, 0.2946265423389297, 0.5309212109364524, 0.46934363197288587, 0.31241990149802024, 0.7766576131481225, 0.17752528873959783, 0.09217154786996962, 0.7139263006753215, 0.37264100614611007, 0.31167310856316544, 0.9561816386902715, 0.41712537904698577, 0.17650364145574848, 0.5963674039841901, 0.6480507446136659, 0.09749259192755222, 0.08981443532363975, 0.17441255326282723, 0.9842440592440544, 0.4916651430864114, 0.3347161593228044, 0.5591561303583962, 0.04863463459561379, 0.5481307841842608, 0.7932166198616949, 0.19151454178813576, 0.06628817836681966, 0.30702497540738694, 0.9682423000763978, 0.06580772236835519, 0.16719583342293998, 0.5452965986382738, 0.14537749245396114, 0.18958797749636935, 0.07644902085276872, 0.14916774431996038, 0.6592978501733964, 0.7474213002963761, 0.6781292429061258, 0.04377323509580011, 0.8773724132056485, 0.2238657343899758]
			#writeOutCost(listWorkerCosto,name[:8] + "_Costos_Trabajadores")
			#print(listWorkerCosto)
			#input("")
			#print("Opcion 1")

		elif opcion == "2" and jobs is not None and jobsCalificate is not None:
			#costo, solucion, tiempo = goloso(S, O, P, R, len(jobsCalificate), jobsCalificate, listWorkerCosto, iteraciones, len(jobsCalificate))
			#writeOutGoloso(costo,solucion,tiempo,name[:8] + "_Goloso")
			print("Triste:c")

		elif opcion == "3" and jobs is not None and jobsCalificate is not None:
			"""
			# Base de datos 1 y 2
			maxTemp = 0.2
			minTemp = 0.00001
			iteration = 60
			alpha = 0.99
			repeat = 15

			# Base de datos 3
			maxTemp = 1
			minTemp = 0.00001
			iteration = 60
			alpha = 0.99
			repeat = 15

			# Base de datos 4
			maxTemp = 0.8
			minTemp = 0.00001
			iteration = 60
			alpha = 0.99
			repeat = 15
			
			"""
			#simulatedAnneling(maxTemp,minTemp,iteration,alpha,entrada,len(jobsCalificate),jobsCalificate,O,len(jobs),listWorkerCosto,repeat)
			#print(str(costo))
			#input("")
			globalCostSA, globalTimeSA, mejorSolucionGlobalSA, mejorCostoGlobalSA = simulatedAnneling(maxTemp,minTemp,iteration,alpha,entrada,len(jobsCalificate),jobsCalificate,O,len(jobs),repeat)
			writeAnality(globalCostSA,globalTimeSA,name[:8])
			writeOutSA(globalCostSA, globalTimeSA, mejorSolucionGlobalSA, mejorCostoGlobalSA, name[:8] + str(iteration) + "_" + str(alpha) + "" + str(iteration) + "_SA")
		
		elif opcion == "4":
			print("Opcion 4")
			opcion = 4

		elif jobs is None or jobsCalificate is None:
			print("Primero debe cargar un archivo ")

		else:
			print("Ingrese una opcion valida")

		print("\n\n")

main()